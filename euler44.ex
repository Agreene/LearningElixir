defmodule Euler44 do
  @moduledoc """
  Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:

  1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

  It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.

  Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?
"""



  @doc """
  brute force  -- not very pretty
  Generate the first n pentagonal numbers, then do a nested loop and check all combinations
  O(n^2) solution
  """

  def solution(n) do
    pent_numbers = Enum.map(1..n, &pentagonal/1)

    for x <- pent_numbers,
        y <- pent_numbers,
        y > x,
        pentagonal?(x + y),
        pentagonal?(y - x),
        do: {x, y, y - x}
  end

  def pentagonal(n) do
    div(n * ((3* n) - 1), 2)
  end


  #from wikipedia: https://en.wikipedia.org/wiki/Pentagonal_number#Tests_for_pentagonal_numbers
  def pentagonal?(n) do
    n_sqrt = (:math.sqrt((24*n)+1) + 1) / 6
    n_sqrt == round(n_sqrt)
  end

end
